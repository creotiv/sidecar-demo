---
# 1) NAMESPACE
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
---
# 2) LOKI DEPLOYMENT (your existing config, unchanged except for indentation cleanup)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: monitoring
  labels:
    app: loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
        - name: loki
          image: grafana/loki:2.8.2
          args:
            - "-config.file=/etc/loki/local-config.yaml"
          ports:
            - containerPort: 3100
          volumeMounts:
            - name: loki-config
              mountPath: /etc/loki/
            - name: loki-data
              mountPath: /tmp/loki
      volumes:
        - name: loki-config
          configMap:
            name: loki-config
        - name: loki-data
          emptyDir: {}
---
# 3) LOKI CONFIGMAP (exactly as before)
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
  namespace: monitoring
data:
  local-config.yaml: |
    auth_enabled: false

    server:
      http_listen_port: 3100

    # =====================
    # INGESTER + RING + CHUNKS
    # =====================
    ingester:
      lifecycler:
        address: 127.0.0.1
        ring:
          kvstore:
            store: inmemory
          replication_factor: 1
      chunk_idle_period: 5m
      chunk_retain_period: 30s
      max_transfer_retries: 0
      wal:
        enabled: true
        dir: /tmp/loki/wal

    # =====================
    # SCHEMA / INDEX CONFIG
    # =====================
    schema_config:
      configs:
        - from: 2020-10-24
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h

    # =====================
    # STORAGE CONFIGURATION
    # =====================
    storage_config:
      boltdb_shipper:
        active_index_directory: /tmp/loki/index
        cache_location: /tmp/loki/cache
        shared_store: filesystem
      filesystem:
        directory: /tmp/loki/chunks

    # =====================
    # COMPACTOR CONFIGURATION
    # =====================
    compactor:
      working_directory: /tmp/loki/compactor
      shared_store: filesystem

    # =====================
    # LIMITS CONFIGURATION
    # =====================
    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h
---
# 4) LOKI SERVICE
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: monitoring
spec:
  selector:
    app: loki
  ports:
    - protocol: TCP
      port: 3100
      targetPort: 3100
  type: ClusterIP
---
# 5) GRAFANA DATASOURCE CONFIG (provisions Loki as a data source)
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: monitoring
data:
  # This file will end up at /etc/grafana/provisioning/datasources/loki.yaml inside the Grafana container.
  loki.yaml: |
    apiVersion: 1
    datasources:
      - name: Loki
        type: loki
        access: proxy
        url: http://loki.monitoring.svc.cluster.local:3100
        isDefault: true
        editable: false
        jsonData:
          maxLines: 1000
---
# 6) GRAFANA DEPLOYMENT
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:12.0.1
          env:
            # Set an admin password (change as needed)
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: "admin"
            - name: GF_SERVER_DOMAIN
              value: "grafana.local"
            - name: GF_SERVER_ROOT_URL
              value: "%(protocol)s://%(domain)s:%(http_port)s/"
          ports:
            - containerPort: 3000
          volumeMounts:
            # Mount the datasource ConfigMap so Grafana automatically picks up Loki
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
      volumes:
        - name: grafana-datasources
          configMap:
            name: grafana-datasources
---
# 7) GRAFANA SERVICE (NodePort so you can browse from outside the cluster)
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
spec:
  type: NodePort
  selector:
    app: grafana
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
      nodePort: 30007
